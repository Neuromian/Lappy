**总体需求：**

一个可运行在Windows、Mac、以及Linux上的跨平台LLM客户端，具备后台运行，悬浮窗调用，插件导入等功能。

**v0.1.1版本具体功能：**

1.实现在Windows 10及以上系统版本的运行，同时预备兼容Mac和Linux（deepin、openkylin优先）。

2.实现应用在系统托盘的常驻，点击后唤起主界面。

3.主界面为典型的LLM对话界面，包括如下几个元素：输入框，消息发送，对话内容显示，消息导出，历史记录，消息清空。对话内容中，每段消息应该显示时间，LLM模型名称，token数量这些信息。

4.应用设置界面，应该包括：1、API配置大模块，有配置保存、选择、删除功能，以及每个配置中的API供应方选择，API信息填写；2、快捷键大模块，有发送快捷键设置；3、数据管理大模块，有缓存位置，数据全量导出功能

**v0.1.1版本额外要求：**

1.UI风格小清新、扁平化、无边框，色调可以参考tailwind色系。

2.使用Flutter方案构筑所有逻辑和UI，禁止使用nodejs方案，因为它很臃肿。flutter create --org fun.lappy.llmpcagent --platforms windows,macos,linux lappy

3.请你先出具体的方案给我，等我确认后再开始编程。

4.请你维护一个文本文档，用于LLM agent终端后，把开发进度交付给下一个LLM

5.开发环境在中国，开发工具注意使用中国的镜像

6.对于依赖包，使用最新版本，不要使用过时库

7.记住你在windows环境开发，考虑windows平台指令的特殊性

8.在当前目录直接开发

9.生成一个llm log文档，记录你的工作进度，方便交接工作



