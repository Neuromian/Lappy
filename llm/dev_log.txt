# LLM 开发日志
这个日志记录了之前 LLM Agent 做的事情

## Day7

### Deepseek API 接入
- 实现了 Deepseek API 配置功能
  - 添加了 Deepseek API 端点配置
  - 优化了 API Key 的验证和管理
  - 完善了配置界面的交互逻辑
  - 确保配置的安全性和可靠性
- 开发了 Deepseek 服务适配器
  - 实现了与 Deepseek API 的通信接口
  - 添加了流式响应支持
  - 优化了错误处理机制
  - 提升了服务调用的稳定性
- 修复相关问题
  - 解决了 API 调用中的类型转换问题
  - 优化了响应数据的解析逻辑
  - 完善了异常处理流程
  - 提高了整体服务质量

## Day6

### Markdown渲染功能优化
- 改进了Markdown文本渲染功能
  - 优化了标题渲染逻辑，确保#后有空格
  - 统一设置了MiSans字体，提升了文本显示效果
  - 调整了不同级别标题的字体大小
  - 优化了代码块的显示样式
- 提升了文本交互体验
  - 实现了跨行文本选择功能
  - 优化了SelectionArea组件的使用
  - 提高了长文本的可读性
  - 改善了整体排版效果

## Day5

### 聊天界面输入框优化
- 优化了聊天界面的输入框功能
  - 设置了 maxLines 和 minLines 属性
  - 实现了文本自动换行功能
  - 添加了输入框高度自适应功能
  - 提升了长文本输入的用户体验

### 会话导出功能实现
- 实现了会话导出功能
  - 添加了导出会话到JSON文件的功能
  - 优化了导出文件名的处理逻辑，移除Windows不允许的特殊字符
  - 使用FilePicker实现文件保存对话框
  - 确保导出的JSON数据包含完整的会话信息
- 改进了导出功能的用户体验
  - 添加了导出确认对话框
  - 提供了清晰的用户操作提示
  - 优化了文件保存流程
  - 确保了导出过程的稳定性和可靠性

## Day4

### 重命名对话框优化
- 优化了会话重命名对话框的界面
  - 使用SizedBox组件限制输入框高度为40像素
  - 提供了更好的用户体验
  - 使界面更加美观和易用
  - 保持了对话框布局的一致性

### 会话管理功能修复
- 修复了删除所有会话后UI崩溃的问题
  - 优化了 NavigationPane 组件的 selected 属性处理逻辑
  - 实现了删除最后一个会话时自动创建新会话的功能
  - 确保了会话列表始终保持至少一个有效会话
  - 提升了会话管理功能的稳定性

### FlyoutController 管理优化
- 修复了会话历史菜单中 FlyoutController 的使用问题
  - 实现了 FlyoutController 实例的 Map 存储管理
  - 优化了 controller 的生命周期管理
  - 解决了点击菜单按钮时的错误提示
  - 确保每个会话都有独立的 controller 实例
  - 避免了重复创建 controller 导致的问题

## Day3

### ChatView加载动画优化
- 优化了消息加载动画效果
  - 移除了底部不必要的加载动画显示
  - 为MessageBubble组件添加了毛玻璃加载效果
  - 提升了消息加载过程的视觉体验
  - 使整体加载过程更加流畅和美观

### API 配置持久化存储修复
- 修复了 API 配置持久化存储的问题
  - 优化了配置的保存和加载逻辑
  - 完善了配置管理器的错误处理机制
  - 添加了详细的调试日志输出
- 改进了配置管理功能
  - 优化了默认配置的设置逻辑
  - 完善了配置更新和删除的处理流程
  - 提升了配置管理的稳定性和可靠性

### 窗口管理优化
- 优化了窗口配置和控制
  - 修改了 WindowOptions 配置，设置了合适的窗口大小和最小尺寸
  - 添加了窗口装饰效果，使用 flutter_acrylic 实现亚克力效果
  - 保持了窗口背景透明，提升了视觉体验
  - 优化了窗口标题栏样式，使其更符合系统风格
- 改进了窗口交互体验
  - 实现了窗口的最小化、最大化和关闭功能
  - 优化了窗口的拖拽和缩放行为
  - 保持了窗口状态的一致性

### 状态管理优化
- 将应用状态管理从 ChangeNotifier 迁移到 GetX
  - 重构了 ChatController，使用 GetX 的响应式状态管理
  - 优化了状态更新逻辑，减少不必要的重建
  - 提升了应用整体性能和响应速度
- 修复了 debugPrint 未定义的问题
  - 添加了 'package:flutter/foundation.dart' 导入
  - 确保了调试信息的正确输出

### 设置页面优化
- 实现了设置项的本地持久化存储和读取功能
  - 使用 SharedPreferences 存储配置信息
  - 优化了配置加载和保存逻辑
  - 确保设置在应用重启后能够恢复
- 添加了已保存设置项的编辑功能
  - 支持编辑现有的 API 配置
  - 支持设置默认配置
  - 优化了配置表单的交互体验

### 问题修复
- 修复了配置页面中配置项重复的问题
- 修复了相关的类型错误
- 优化了配置管理的逻辑

### 对话显示优化
- 优化了ChatGLMService中的流式处理逻辑
  - 简化了StreamController的缓冲机制
  - 改进了消息内容的实时更新方式
  - 提高了流式响应的稳定性
- 改进了消息显示机制
  - 优化了ChatMessage类的属性定义
  - 通过GetX响应式特性实现更稳定的UI更新
  - 解决了消息显示不完整的问题
- 提升了整体对话体验
  - 优化了消息气泡的显示效果
  - 提高了对话响应的流畅性
  - 改善了长文本消息的展示体验

### UI布局优化
- 优化了主界面导航栏布局
  - 将设置按钮从主页面右上角移动到导航栏底部
  - 使界面布局更加统一和合理
  - 提高了用户界面的一致性

### 问题修复
- 修复了 SettingsView 类未正确导入的问题
  - 添加了正确的导入语句
  - 确保了设置页面的正常访问

### ChatView 优化
- 修复了消息列表的显示问题
  - 解决了移除首条消息后出现多余加载动画的问题
  - 优化了消息列表的滚动行为
  - 提升了用户交互体验的流畅度

## Day2

### 聊天功能改进
- 实现了流式响应功能
  - 支持实时显示AI回复内容
  - 优化了token计数估算
  - 添加了模型信息显示
- 改进了会话管理
  - 实现了会话的创建、切换、重命名和删除
  - 优化了消息存储和加载逻辑
  - 添加了清空当前会话的功能

### API设置页面改进
- 重新设计了API设置页面的布局，采用左右分栏设计
  - 左侧显示已保存的API配置列表
  - 右侧为新建配置表单
- 为ChatGLM添加了默认的API端点配置
  - OpenAI默认端点：https://api.openai.com/v1
  - ChatGLM默认端点：https://open.bigmodel.cn/api/paas/v4/chat/completions

### 问题修复
- 修复了配置页面中配置项重复的问题
- 修复了相关的类型错误
- 优化了配置管理的逻辑

### 对话显示优化
- 优化了ChatGLMService中的流式处理逻辑
  - 简化了StreamController的缓冲机制
  - 改进了消息内容的实时更新方式
  - 提高了流式响应的稳定性
- 改进了消息显示机制
  - 优化了ChatMessage类的属性定义
  - 通过GetX响应式特性实现更稳定的UI更新
  - 解决了消息显示不完整的问题
- 提升了整体对话体验
  - 优化了消息气泡的显示效果
  - 提高了对话响应的流畅性
  - 改善了长文本消息的展示体验

## Day1

### 应用初始化
- 实现了基础的聊天主界面和设置页面

### 应用优化
- 使用 fluent_ui 代替默认 material design 构建项目 UI
  - 优化了整体界面
  - 优化了气泡显示效果
